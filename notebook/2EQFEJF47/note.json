{
  "paragraphs": [
    {
      "title": "Loading important parts from Part 1",
      "text": "%spark\nimport spark.implicits._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\n\nval structTypeDDL \u003d \"`country` STRING,`description` STRING,`designation` STRING,`points`STRING,`price` BIGINT,`province` STRING,`region_1` STRING,`region_2` STRING,`taster_name` STRING,`taster_twitter_handle` STRING,`title` STRING,`variety` STRING,`winery` STRING\"\nval wineReviewSchema \u003d StructType.fromDDL(structTypeDDL)\n\nval wineReviews \u003d spark.read.option(\"inferSchema\", \"false\").schema(wineReviewSchema).json(\"/svccdata/winereviews.json\")\nwineReviews.persist()\nwineReviews.createOrReplaceTempView(\"reviews\")",
      "user": "anonymous",
      "dateUpdated": "2019-10-18 21:36:14.567",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import spark.implicits._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nstructTypeDDL: String \u003d `country` STRING,`description` STRING,`designation` STRING,`points`STRING,`price` BIGINT,`province` STRING,`region_1` STRING,`region_2` STRING,`taster_name` STRING,`taster_twitter_handle` STRING,`title` STRING,`variety` STRING,`winery` STRING\nwineReviewSchema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(country,StringType,true), StructField(description,StringType,true), StructField(designation,StringType,true), StructField(points,StringType,true), StructField(price,LongType,true), StructField(province,StringType,true), StructField(region_1,StringType,true), StructField(region_2,StringType,true), StructField(taster_n..."
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1571424475670_-759950399",
      "id": "20191018-184755_741757872",
      "dateCreated": "2019-10-18 18:47:55.670",
      "dateStarted": "2019-10-18 21:36:14.670",
      "dateFinished": "2019-10-18 21:36:17.148",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Find some nice Wines from France above an 88 point Rating",
      "text": "%sql\nselect winery, avg(points) as avg_rating from reviews where country \u003d \u0027France\u0027 AND region_1 \u003d \u0027Côtes de Provence\u0027 AND points \u003e 88 group by winery order by avg_rating desc",
      "user": "anonymous",
      "dateUpdated": "2019-10-18 23:58:11.955",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "winery": "string",
                      "avg_rating": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "winery",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "avg_rating",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "winery\tavg_rating\nChâteau la Vivonne\t92.0\nDomaine de la Croix\t92.0\nEstandon\t92.0\nDomaine du Clos Gautier\t92.0\nMirabeau\t92.0\nChâteau Grand Boise\t91.83333333333333\nChâteau Sainte Marguerite\t91.125\nChâteau Minuty\t91.0\nFiguière\t91.0\nDomaine de la Bastide Blanche\t91.0\nJCB\t91.0\nChâteau Miraval\t91.0\nChâteau Sainte-Marguerite\t91.0\nDomaine Saint Andrieu\t91.0\nChâteau d\u0027Esclans\t90.92592592592592\nChâteau Saint-Maur\t90.9090909090909\nChâteau Roubine\t90.85714285714286\nChâteau du Galoupet\t90.8\nChâteau la Gordonne\t90.75\nChâteau Rimauresq\t90.75\nDomaine Saint-André de Figuière\t90.72727272727273\nChâteau Riotor\t90.66666666666667\nChâteau de Berne\t90.625\nBernard Magrez\t90.55555555555556\nMaison Angelvin\t90.5\nChâteau Sainte-Béatrice\t90.5\nChâteau de Roquefort\t90.5\nDomaine Clos Gautier\t90.5\nChâteau du Carrubier\t90.5\nChâteau la Mascaronne\t90.42857142857143\nChâteau les Valentines\t90.375\nChâteau de Pampelonne\t90.33333333333333\nLes Maîtres Vignerons de la Presqu\u0027île de Saint-Tropez\t90.33333333333333\nDomaine du Grand Cros\t90.28571428571429\nLes Vignobles Gueissard\t90.25\nDomaines Ott\t90.22222222222223\nChâteau Léoube\t90.2\nDomaine Sainte-Marie\t90.16666666666667\nMathilde Chapoutier Sélection\t90.0\nProvence Wine Maker\t90.0\nClos Cibonne\t90.0\nDomaine du Jas d\u0027Esclans\t90.0\nDomaine des Mapliers\t90.0\nChâteau des Bormettes\t90.0\nChâteau Hermitage Saint-Martin\t90.0\nChâteau Carpe Diem\t90.0\nChâteau les Crostes\t90.0\nChâteau de Léoube\t90.0\nDomaine Gavoty\t90.0\nDomaine Houchart\t90.0\nChâteau Rasque\t90.0\nChâteau Barbeiranne\t90.0\nCellier Saint-Sidoine\t90.0\nDomaine du Clos d\u0027Alari\t90.0\nDomaine Jas d\u0027Esclans\t90.0\nChâteau des Demoiselles\t90.0\nLes Vins Bréban\t90.0\nDomaine les Fouques\t90.0\nChâteau Castel des Maures\t90.0\nChâteau Réal Martin\t90.0\nChâteau des Bertrands\t90.0\nChâteau Deffends\t90.0\nChâteau Sainte Roseline\t89.875\nChâteau de Brigue\t89.75\nDomaine Sorin\t89.66666666666667\nDomaine de l\u0027Amaurigue\t89.66666666666667\nDomaine de la Sauveuse\t89.5\nFabre en Provence\t89.5\nChâteau Ferry Lacombe\t89.5\nChâteau Barbanau\t89.5\nHecht \u0026 Bannier\t89.33333333333333\nChâteau de Pourcieux\t89.25\nDomaine de la Sanglière\t89.25\nChâteau Saint-Pierre\t89.2\nChâteau l\u0027Afrique\t89.0\nMeulnart Père et Fils\t89.0\nM. Chapoutier\t89.0\nClos Saint-Joseph\t89.0\nGassier\t89.0\nCommanderie de Peyrassol\t89.0\nChâteau des Sarrins\t89.0\nDomaine Jacourette\t89.0\nChâteau Thuerry\t89.0\nDomaine des Aspras\t89.0\nChâteau Saint-André de Figuière\t89.0\nDomaine du Dragon\t89.0\nRimauresq\t89.0\nChâteau de Saint-Martin\t89.0\nDomaine de Caseneuve\t89.0\nVignobles de Saint-Tropez\t89.0\nDomaine Val d\u0027Astier\t89.0\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d11"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1571425546276_-738762107",
      "id": "20191018-190546_342063805",
      "dateCreated": "2019-10-18 19:05:46.276",
      "dateStarted": "2019-10-18 23:58:12.015",
      "dateFinished": "2019-10-18 23:58:15.945",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Some OG SQL",
      "text": "%sql\nselect country, designation, points, price, variety, winery from reviews\nwhere designation IS NOT NULL\norder by price desc limit 100",
      "user": "anonymous",
      "dateUpdated": "2019-10-18 23:59:11.106",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "country": "string",
                      "designation": "string",
                      "points": "string",
                      "price": "string",
                      "variety": "string",
                      "winery": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "country\tdesignation\tpoints\tprice\tvariety\twinery\nUS\tRoger Rose Vineyard\t91.0\t2013.0\tChardonnay\tBlair\nAustria\tRied Loibenberg Smaragd\t94.0\t1100.0\tGrüner Veltliner\tEmmerich Knoll\nPortugal\t90-year Old Tawny\t97.0\t1000.0\tPort\tW. \u0026 J. Graham\u0027s\nPortugal\tColheita White\t94.0\t980.0\tPort\tKopke\nItaly\tRiserva\t94.0\t900.0\tSangiovese Grosso\tBiondi Santi\nAustralia\tGrange\t98.0\t850.0\tShiraz\tPenfolds\nAustralia\tGrange\t99.0\t850.0\tShiraz\tPenfolds\nAustralia\tHill of Grace\t96.0\t820.0\tShiraz\tHenschke\nFrance\tMorogues\t87.0\t800.0\tRosé\tDomaine Pellé\nItaly\tRiserva\t94.0\t800.0\tSangiovese\tBiondi Santi\nFrance\tClos du Mesnil Brut Blanc de Blancs\t99.0\t800.0\tChardonnay\tKrug\nPortugal\tColheita\t87.0\t790.0\tPort\tBurmester\nAustralia\tHill of Grace\t91.0\t780.0\tShiraz\tHenschke\nGermany\tKiedrich Gräfenberg Trockenbeerenauslese\t97.0\t775.0\tRiesling\tRobert Weil\nGermany\tKiedrich Gräfenberg Trockenbeerenauslese\t95.0\t775.0\tRiesling\tRobert Weil\nGermany\tKiedrich Gräfenberg Trockenbeerenauslese\t95.0\t775.0\tRiesling\tRobert Weil\nGermany\tKiedrich Gräfenberg Trockenbeerenauslese\t98.0\t775.0\tRiesling\tRobert Weil\nPortugal\tColheita Tawny\t93.0\t770.0\tPort\tKopke\nSpain\tEl Perer\t96.0\t770.0\tCarignan\tMarco Abella\nHungary\tEssencia\t94.0\t764.0\tFurmint\tRoyal Tokaji\nUS\tIntrepid\t92.0\t750.0\tSyrah\tLaw\nFrance\tBlanc de Blancs Brut\t92.0\t675.0\tChardonnay\tArmand de Brignac\nGermany\tKiedrich Gräfenberg Trockenbeerenauslese\t96.0\t672.0\tRiesling\tRobert Weil\nPortugal\tNacional Vintage\t100.0\t650.0\tPort\tQuinta do Noval\nFrance\tLes Quatre Journaux\t95.0\t650.0\tPinot Noir\tLouis Latour\nFrance\tLe Montrachet\t96.0\t630.0\tChardonnay\tLouis Latour\nUS\tFamily Reserve\t94.0\t625.0\tCabernet Sauvignon\tYao Ming\nUS\tFamily Reserve\t98.0\t625.0\tCabernet Sauvignon\tYao Ming\nUS\tFamily Reserve\t97.0\t625.0\tCabernet Sauvignon\tYao Ming\nFrance\tLe Mesnil Blanc de Blancs Brut\t100.0\t617.0\tChardonnay\tSalon\nGermany\tKiedrich Gräfenberg Trockenbeerenauslese\t97.0\t612.0\tRiesling\tRobert Weil\nSpain\tUnico Reserva Especial\t92.0\t600.0\tTempranillo-Cabernet Sauvignon\tVega Sicilia\nFrance\tCristal Brut Rosé\t96.0\t600.0\tChampagne Blend\tLouis Roederer\nSpain\tTinus\t95.0\t600.0\tTempranillo\tGarcía Figuero\nItaly\tCà d\u0027Morissio Riserva\t99.0\t595.0\tNebbiolo\tMascarello Giuseppe e Figlio\nFrance\tCristal Brut Rosé\t96.0\t595.0\tChampagne Blend\tLouis Roederer\nPortugal\tNacional Vintage\t98.0\t595.0\tPort\tQuinta do Noval\nPortugal\tVery Old Single Harvest\t95.0\t588.0\tPort\tTaylor Fladgate\nFrance\tLes Quatre Journaux\t94.0\t580.0\tPinot Noir\tLouis Latour\nItaly\tRiserva\t95.0\t550.0\tSangiovese\tPoggio di Sotto\nItaly\tRiserva\t100.0\t550.0\tSangiovese\tBiondi Santi\nItaly\tRiserva\t96.0\t540.0\tSangiovese\tBiondi Santi\nFrance\tDomaine du Clos Frantin\t96.0\t530.0\tPinot Noir\tAlbert Bichot\nFrance\tChambertin Clos de Bèze Grand Cru\t96.0\t525.0\tPinot Noir\tDomaine Perrot-Minot\nFrance\tLe Mesnil Blanc de Blancs Brut\t98.0\t520.0\tChardonnay\tSalon\nGermany\tHattenheimer Wisselbrunnen Beernauslese Gold Cap\t90.0\t510.0\tRiesling\tBaron Knyphausen\nFrance\tMusigny\t96.0\t510.0\tPinot Noir\tDomaine Jacques Prieur\nItaly\tSorì Tildin\t92.0\t500.0\tRed Blend\tGaja\nGermany\tErbacher Marcobrunn Trockenbeerenauslese\t93.0\t500.0\tRiesling\tSchloss Reinhartshausen\nFrance\tCuvée da Capo\t93.0\t500.0\tRhône-style Red Blend\tDomaine du Pegau\nGermany\tErbacher Marcobrunn Trockenbeerenauslese\t93.0\t500.0\tRiesling\tSchloss Reinhartshausen\nAustralia\tBin 707\t95.0\t500.0\tCabernet Sauvignon\tPenfolds\nUS\tDouble Plus Estate Grown\t93.0\t500.0\tCabernet Sauvignon\tHewitt\nItaly\tVigneto di Monte Lodoletta\t95.0\t500.0\tCorvina, Rondinella, Molinara\tDal Forno Romano\nAustralia\tGrange\t96.0\t500.0\tShiraz\tPenfolds\nSpain\tUnico\t89.0\t500.0\tTempranillo-Cabernet Sauvignon\tVega Sicilia\nItaly\tCosta Russi\t93.0\t500.0\tRed Blend\tGaja\nSpain\tUnico\t89.0\t500.0\tTempranillo-Cabernet Sauvignon\tVega Sicilia\nPortugal\tPorto Envelhecido em Casco Colheita\t95.0\t499.0\tPort\tMessias\nItaly\tSorì San Lorenzo\t96.0\t495.0\tNebbiolo\tGaja\nItaly\tCosta Russi\t95.0\t495.0\tNebbiolo\tGaja\nPortugal\tReserva Velho\t93.0\t495.0\tRamisco\tAdega Viuva Gomes\nGermany\tTrockenbeerenauslese Goldlack\t97.0\t486.0\tRiesling\tSchloss Johannisberger\nFrance\tLes Demoiselles\t97.0\t476.0\tChardonnay\tLouis Jadot\nItaly\tVigneto di Monte Lodoletta\t96.0\t470.0\tCorvina, Rondinella, Molinara\tDal Forno Romano\nFrance\tCristal Rosé Brut\t95.0\t469.0\tChampagne Blend\tLouis Roederer\nFrance\tCristal Brut Rosé\t96.0\t469.0\tChampagne Blend\tLouis Roederer\nPortugal\tVintage\t95.0\t467.0\tPort\tDow\u0027s\nItaly\tMasseto\t100.0\t460.0\tMerlot\tTenuta dell\u0027Ornellaia\nItaly\tMasseto\t97.0\t460.0\tMerlot\tTenuta dell\u0027Ornellaia\nItaly\tMasseto\t95.0\t460.0\tMerlot\tTenuta dell\u0027Ornellaia\nItaly\tMasseto\t95.0\t460.0\tMerlot\tTenuta dell\u0027Ornellaia\nSpain\tClon de la Familia\t98.0\t450.0\tTinto Fino\tEmilio Moro\nPortugal\tBarca-Velha\t100.0\t450.0\tPortuguese Red\tCasa Ferreirinha\nSpain\tUnico\t92.0\t450.0\tRed Blend\tVega Sicilia\nFrance\tBrut Rosé\t89.0\t450.0\tChampagne Blend\tArmand de Brignac\nItaly\tCosta Russi\t95.0\t450.0\tNebbiolo\tGaja\nUS\tLa Joie\t94.0\t450.0\tBordeaux-style Red Blend\tVerité\nUS\tLa Joie\t96.0\t450.0\tBordeaux-style Red Blend\tVerité\nItaly\tSorì San Lorenzo\t93.0\t450.0\tNebbiolo\tGaja\nItaly\tSorì Tildin\t93.0\t450.0\tNebbiolo\tGaja\nFrance\tMC III Brut\t97.0\t450.0\tChampagne Blend\tMoët \u0026 Chandon\nSpain\tClon de la Familia\t93.0\t450.0\tTinto Fino\tEmilio Moro\nUS\tLa Muse\t100.0\t450.0\tBordeaux-style Red Blend\tVerité\nFrance\tLes Demoiselles\t96.0\t450.0\tChardonnay\tLouis Latour\nUS\tLe Desir\t97.0\t450.0\tBordeaux-style Red Blend\tVerité\nFrance\tBrut Rosé\t89.0\t450.0\tChampagne Blend\tArmand de Brignac\nItaly\tRiserva\t97.0\t450.0\tSangiovese\tPoggio di Sotto\nUS\tLe Desir\t97.0\t450.0\tBordeaux-style Red Blend\tVerité\nUS\tLa Muse\t93.0\t450.0\tBordeaux-style Red Blend\tVerité\nSpain\tUnico\t91.0\t450.0\tTempranillo Blend\tVega Sicilia\nGermany\tSerrig Schloss Saarsteiner Eiswein\t95.0\t448.0\tRiesling\tSchloss Saarstein\nGermany\tTrockenbeerenauslese\t97.0\t445.0\tRiesling\tSchloss Johannisberger\nItaly\tSorì San Lorenzo\t99.0\t440.0\tNebbiolo\tGaja\nItaly\tSorì Tildìn\t99.0\t440.0\tNebbiolo\tGaja\nGermany\tWehlener Sonnenuhr Trockenbeerenauslese Erste Lage\t97.0\t440.0\tRiesling\tS.A. Prüm\nGermany\tWehlener Sonnenuhr Trockenbeerenauslese\t96.0\t440.0\tRiesling\tS.A. Prüm\nGermany\tWehlener Sonnenuhr Vat 59 Trockenbeerenauslese\t94.0\t440.0\tRiesling\tS.A. Prüm\nPortugal\tBarca Velha\t99.0\t426.0\tPortuguese Red\tCasa Ferreirinha\nFrance\tLes Quatre Journaux\t93.0\t425.0\tPinot Noir\tLouis Latour\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d12"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1571427225245_1498107592",
      "id": "20191018-193345_797021543",
      "dateCreated": "2019-10-18 19:33:45.245",
      "dateStarted": "2019-10-18 23:59:11.177",
      "dateFinished": "2019-10-18 23:59:11.576",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Price and Variety by Country Stats",
      "text": "%spark\nval priceStatsByCountry \u003d wineReviews\n  .where(col(\"country\").isNotNull)\n  .groupBy(\"country\")\n  .agg(\n      count(\"*\") as \"total\",\n      min(\"price\") as \"min_price\",\n      avg(\"price\") as \"avg_price\",\n      max(\"price\") as \"max_price\"\n  )\n\npriceStatsByCountry.createOrReplaceTempView(\"pricebycountry\")\n\n/* Price Stats by country / variety */\nval priceStatsByCountryAndVariety \u003d wineReviews\n  .where(col(\"variety\").isNotNull.and(col(\"country\").isNotNull))\n  .groupBy(\"country\", \"variety\")\n  .agg(\n      count(\"*\") as \"total\",\n      min(\"price\") as \"min_price\",\n      avg(\"price\") as \"avg_price\",\n      max(\"price\") as \"max_price\"\n  )\n\npriceStatsByCountryAndVariety.createOrReplaceTempView(\"pricebycountryvariety\")\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-18 21:36:26.050",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "priceStatsByCountry: org.apache.spark.sql.DataFrame \u003d [country: string, total: bigint ... 3 more fields]\npriceStatsByCountryAndVariety: org.apache.spark.sql.DataFrame \u003d [country: string, variety: string ... 4 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1571427230209_-700746862",
      "id": "20191018-193350_1257034669",
      "dateCreated": "2019-10-18 19:33:50.210",
      "dateStarted": "2019-10-18 21:36:26.531",
      "dateFinished": "2019-10-18 21:36:28.521",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Find Top10 highest average priced wines by country",
      "text": "%sql\nselect * from pricebycountry ORDER BY avg_price DESC limit 10",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:33:00.324",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "country": "string",
                      "total": "string",
                      "min_price": "string",
                      "avg_price": "string",
                      "max_price": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": true
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "country",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [
                {
                  "name": "avg_price",
                  "index": 3.0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "total",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "country\ttotal\tmin_price\tavg_price\tmax_price\nSwitzerland\t7\t21\t85.28571428571429\t160\nEngland\t74\t25\t51.68115942028985\t95\nGermany\t2165\t5\t42.25754716981132\t775\nFrance\t22093\t5\t41.139120162016205\t3300\nHungary\t146\t10\t40.648275862068964\t764\nItaly\t19540\t5\t39.663769658271256\t900\nUS\t54504\t4\t36.5734635584631\t2013\nCanada\t257\t12\t35.71259842519685\t120\nAustralia\t2329\t5\t35.43766346992153\t850\nIsrael\t505\t8\t31.768916155419223\t150\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d13"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1571427281168_187566760",
      "id": "20191018-193441_2122678686",
      "dateCreated": "2019-10-18 19:34:41.168",
      "dateStarted": "2019-10-18 23:59:41.936",
      "dateFinished": "2019-10-18 23:59:46.271",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Find Top 10 Most Popular Varieties of Wine by Country ",
      "text": "%sql\nselect * from pricebycountryvariety order by total DESC limit 10",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:33:00.406",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "country": "string",
                      "variety": "string",
                      "total": "string",
                      "min_price": "string",
                      "avg_price": "string",
                      "max_price": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": true
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "variety",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ],
              "groups": [
                {
                  "name": "country",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "avg_price",
                  "index": 4.0,
                  "aggr": "max"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "country\tvariety\ttotal\tmin_price\tavg_price\tmax_price\nUS\tPinot Noir\t9885\t7\t44.59064624124987\t275\nUS\tCabernet Sauvignon\t7315\t6\t54.78887362637363\t625\nUS\tChardonnay\t6801\t4\t30.637383729514248\t2013\nFrance\tBordeaux-style Red Blend\t4725\t7\t40.89631263788213\t3300\nItaly\tRed Blend\t3624\t6\t39.68556543058535\t500\nUS\tSyrah\t3244\t6\t38.91553217821782\t750\nUS\tRed Blend\t2972\t5\t33.65196743554952\t290\nFrance\tChardonnay\t2808\t6\t57.275336322869954\t886\nItaly\tNebbiolo\t2736\t12\t66.44724061810155\t595\nUS\tZinfandel\t2711\t5\t29.492421441774493\t100\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d14"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1571427356950_1415361061",
      "id": "20191018-193556_169801297",
      "dateCreated": "2019-10-18 19:35:56.950",
      "dateStarted": "2019-10-19 00:00:07.739",
      "dateFinished": "2019-10-19 00:00:13.135",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Fixing DataFrame Column Trick",
      "text": "%spark\nval fixedReviews \u003d wineReviews\n  .withColumn(\"num_points\", \u0027points.cast(\"Double\"))\n  .drop(\"points\")\n  .withColumnRenamed(\"num_points\", \"points\")\n  .withColumn(\"num_price\", \u0027price.cast(\"Double\"))\n  .drop(\"price\")\n  .withColumnRenamed(\"num_price\", \"price\")\n\nwineReviews.unpersist() // remove old cache\nfixedReviews.persist() // introduce new cache\nfixedReviews.createOrReplaceTempView(\"reviews\") // replace current memory SQL table",
      "user": "anonymous",
      "dateUpdated": "2019-10-18 21:36:39.302",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "fixedReviews: org.apache.spark.sql.DataFrame \u003d [country: string, description: string ... 11 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1571427384099_-690538218",
      "id": "20191018-193624_1668108506",
      "dateCreated": "2019-10-18 19:36:24.099",
      "dateStarted": "2019-10-18 21:36:39.428",
      "dateFinished": "2019-10-18 21:36:40.549",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Look at the Percentiles for top 10 countries by count. Check Distributions",
      "text": "%sql\nselect country, count(*) as total, min(price) as min, percentile_approx(price, 0.25) as p25, percentile_approx(price, 0.5) as p50, percentile_approx(price, 0.75) as p75, percentile_approx(price, 0.90) as p90, percentile_approx(price, 0.99) as p99, max(price) as max, avg(price) as avg, stddev_pop(price) as stddev\nfrom reviews group by country\norder by total DESC\nlimit 10",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:33:00.479",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "country": "string",
                      "total": "string",
                      "min": "string",
                      "p25": "string",
                      "p50": "string",
                      "p75": "string",
                      "p90": "string",
                      "p99": "string",
                      "max": "string",
                      "avg": "string",
                      "stddev": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": true
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "country",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "p25",
                  "index": 3.0,
                  "aggr": "max"
                },
                {
                  "name": "p50",
                  "index": 4.0,
                  "aggr": "max"
                },
                {
                  "name": "p75",
                  "index": 5.0,
                  "aggr": "max"
                },
                {
                  "name": "p99",
                  "index": 7.0,
                  "aggr": "max"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "country\ttotal\tmin\tp25\tp50\tp75\tp90\tp99\tmax\tavg\tstddev\nUS\t54504\t4.0\t20.0\t30.0\t45.0\t64.0\t135.0\t2013.0\t36.5734635584631\t27.088607804088646\nFrance\t22093\t5.0\t16.0\t25.0\t43.0\t3300.0\t3300.0\t3300.0\t41.139120162016205\t73.76732925660612\nItaly\t19540\t5.0\t18.0\t28.0\t50.0\t900.0\t900.0\t900.0\t39.663769658271256\t38.05135441456322\nSpain\t6645\t4.0\t13.0\t18.0\t30.0\t770.0\t770.0\t770.0\t28.215274608245853\t34.6597606604753\nPortugal\t5691\t5.0\t12.0\t16.0\t28.0\t50.0\t127.0\t1000.0\t26.21825641025641\t41.17101737668977\nChile\t4472\t5.0\t12.0\t15.0\t20.0\t35.0\t95.0\t400.0\t20.786458333333332\t21.926887892214822\nArgentina\t3800\t4.0\t12.0\t17.0\t25.0\t48.0\t125.0\t230.0\t24.510117145899894\t23.427002476505628\nAustria\t3345\t7.0\t18.0\t25.0\t37.0\t55.0\t98.0\t1100.0\t30.76277241872097\t27.21993364688152\nAustralia\t2329\t5.0\t15.0\t21.0\t38.0\t70.0\t200.0\t850.0\t35.43766346992153\t49.038766339813904\nGermany\t2165\t5.0\t18.0\t26.0\t42.0\t70.0\t365.0\t775.0\t42.25754716981132\t62.84548053895605\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d10"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1571427435418_806102194",
      "id": "20191018-193715_784500873",
      "dateCreated": "2019-10-18 19:37:15.418",
      "dateStarted": "2019-10-18 21:36:40.723",
      "dateFinished": "2019-10-18 21:36:43.993",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval tryIt \u003d fixedReviews\n  .select(col(\"price\"))\n  .where(col(\"price\").isNotNull)\n  .agg(\n      avg(col(\"price\")) as \"avg\",\n      stddev_pop(col(\"price\")) as \"sd\"\n  )\nval head \u003d tryIt.head match {\n    case Row(a: Double, s: Double) \u003d\u003e (a, s)\n    case _ \u003d\u003e (0.0, 0.0)\n}\n\ntryIt.printSchema\ntryIt.show\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:17:37.741",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- avg: double (nullable \u003d true)\n |-- sd: double (nullable \u003d true)\n\n+------------------+-----------------+\n|               avg|               sd|\n+------------------+-----------------+\n|35.363389129985535|41.02204811941014|\n+------------------+-----------------+\n\ntryIt: org.apache.spark.sql.DataFrame \u003d [avg: double, sd: double]\nhead: (Double, Double) \u003d (35.363389129985535,41.02204811941014)\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d20",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d21"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1571443723262_-646827600",
      "id": "20191019-000843_1953511724",
      "dateCreated": "2019-10-19 00:08:43.263",
      "dateStarted": "2019-10-19 00:17:07.550",
      "dateFinished": "2019-10-19 00:17:10.190",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create and use UDFs",
      "text": "%spark\nimport org.apache.spark.sql.functions.udf\n\ndef zScore(value: Double, mean: Double, sd: Double): Double \u003d {\n    (value-mean)/sd\n}\n\nval rowZScore : (Double, Double, Double) \u003d\u003e Double \u003d zScore(_,_,_)\nval zScoreFun \u003d udf(rowZScore)\n\ndef withZScore(df: DataFrame, col: Column): DataFrame \u003d {\n  val stats \u003d df\n    .select(col)\n    .where(col.isNotNull)\n    .agg(\n        avg(col) as \"avg\",\n        stddev_pop(col) as \"sd\"\n    )\n  val data \u003d stats.head match {\n      case Row(a: Double, s: Double) \u003d\u003e (a, s)\n      case _ \u003d\u003e (0.01, 0.01)\n  }\n  val mean \u003d data._1\n  val sd \u003d data._2\n  \n  df.withColumn(\"zscore\", zScoreFun(col, lit(mean), lit(sd)))\n}\n",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:28:19.109",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.functions.udf\nzScore: (value: Double, mean: Double, sd: Double)Double\nrowZScore: (Double, Double, Double) \u003d\u003e Double \u003d \u003cfunction3\u003e\nzScoreFun: org.apache.spark.sql.expressions.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction3\u003e,DoubleType,Some(List(DoubleType, DoubleType, DoubleType)))\nwithZScore: (df: org.apache.spark.sql.DataFrame, col: org.apache.spark.sql.Column)org.apache.spark.sql.DataFrame\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1571428030746_-12750512",
      "id": "20191018-194710_2055939117",
      "dateCreated": "2019-10-18 19:47:10.746",
      "dateStarted": "2019-10-19 00:28:19.176",
      "dateFinished": "2019-10-19 00:28:20.236",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Aggregate after Transformation",
      "text": "%spark\n\nval zscored \u003d withZScore(fixedReviews, col(\"price\"))\nzscored\n  .select(\"country\", \"price\", \"zscore\")\n  .groupBy(\"country\")\n  .agg(\n      avg(col(\"zscore\")) as \"avg_zscore\"\n   ).show",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:28:46.630",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---------+--------------------+\n|  country|          avg_zscore|\n+---------+--------------------+\n|   Turkey| -0.2615680174090364|\n|  Germany| 0.16805982041066536|\n|   France| 0.14079577438985666|\n|   Greece|-0.31687749791178943|\n| Slovakia| -0.4720239485269261|\n|     null|-0.26254585728269453|\n|Argentina|-0.26457167502931955|\n|     Peru|-0.42174610783997846|\n|    India| -0.5370296415363128|\n|    China|  -0.423269678769886|\n|    Chile|-0.35534380814485084|\n|  Croatia|-0.24164285692851842|\n|    Italy| 0.10483095616697782|\n|    Spain|-0.17425055182356045|\n|       US| 0.02949814755604135|\n|  Morocco|  -0.386703976452106|\n|  Ukraine| -0.6374402209168836|\n|   Israel|-0.08762295251819796|\n|   Cyprus| -0.4653756390146024|\n|  Uruguay|-0.21841228841461668|\n+---------+--------------------+\nonly showing top 20 rows\n\nzscored: org.apache.spark.sql.DataFrame \u003d [country: string, description: string ... 12 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d34",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d35",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d36",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d37",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d38"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1571444576588_984688781",
      "id": "20191019-002256_1028536767",
      "dateCreated": "2019-10-19 00:22:56.588",
      "dateStarted": "2019-10-19 00:28:46.679",
      "dateFinished": "2019-10-19 00:28:49.763",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval fullPriceData \u003d spark.sql(\"select country, count(*) as total, min(price) as min, percentile_approx(price, 0.25) as p25, percentile_approx(price, 0.5) as p50, percentile_approx(price, 0.75) as p75, percentile_approx(price, 0.90) as p90, percentile_approx(price, 0.99) as p99, max(price) as max, avg(price) as avg, stddev_pop(price) as sd_pop, stddev_samp(price) as sd_sample from reviews group by country\")\n\nval missingPriceRows \u003d fixedReviews\n  .where(col(\"price\").isNull.and(col(\"country\").isNotNull)).groupBy(\"country\")\n  .agg(count(\"*\") as \"missing\")\n\nval joinedWithOtherPrices \u003d missingPriceRows\n  .join(fullPriceData, \"country\")\n  .withColumn(\"miss_perc\", ((col(\"missing\")/col(\"total\"))*100).cast(\"Float\"))\n  .withColumn(\"iqr\", (col(\"p75\")-col(\"p25\")).cast(\"Float\"))\n  .withColumn(\"min_max_dist\", (col(\"max\")-col(\"min\")).cast(\"Integer\"))\n  .withColumn(\"median_mean_dist\", (col(\"p50\")-col(\"avg\")).cast(\"Float\")).where(col(\"total\") \u003e 1)\n\njoinedWithOtherPrices.createOrReplaceTempView(\"priceimputation\")\njoinedWithOtherPrices.printSchema",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:30:18.553",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- country: string (nullable \u003d true)\n |-- missing: long (nullable \u003d false)\n |-- total: long (nullable \u003d false)\n |-- min: double (nullable \u003d true)\n |-- p25: double (nullable \u003d true)\n |-- p50: double (nullable \u003d true)\n |-- p75: double (nullable \u003d true)\n |-- p90: double (nullable \u003d true)\n |-- p99: double (nullable \u003d true)\n |-- max: double (nullable \u003d true)\n |-- avg: double (nullable \u003d true)\n |-- sd_pop: double (nullable \u003d true)\n |-- sd_sample: double (nullable \u003d true)\n |-- miss_perc: float (nullable \u003d true)\n |-- iqr: float (nullable \u003d true)\n |-- min_max_dist: integer (nullable \u003d true)\n |-- median_mean_dist: float (nullable \u003d true)\n\nfullPriceData: org.apache.spark.sql.DataFrame \u003d [country: string, total: bigint ... 10 more fields]\nmissingPriceRows: org.apache.spark.sql.DataFrame \u003d [country: string, missing: bigint]\njoinedWithOtherPrices: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [country: string, missing: bigint ... 15 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1571444640088_1313491690",
      "id": "20191019-002400_1829385340",
      "dateCreated": "2019-10-19 00:24:00.088",
      "dateStarted": "2019-10-19 00:30:18.637",
      "dateFinished": "2019-10-19 00:30:19.562",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect country,miss_perc,avg,p50,median_mean_dist,iqr,p99,sd_sample from priceimputation",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:30:44.192",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "country": "string",
                      "miss_perc": "string",
                      "avg": "string",
                      "p50": "string",
                      "median_mean_dist": "string",
                      "iqr": "string",
                      "p99": "string",
                      "sd_sample": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "country\tmiss_perc\tavg\tp50\tmedian_mean_dist\tiqr\tp99\tsd_sample\nGermany\t2.078522\t42.25754716981132\t26.0\t-16.257547\t24.0\t365.0\t62.860307831963816\nFrance\t19.540125\t41.139120162016205\t25.0\t-16.13912\t27.0\t3300.0\t73.7694042577811\nGreece\t1.0729613\t22.364425162689805\t19.0\t-3.3644252\t11.0\t55.0\t10.610779647282827\nArgentina\t1.1578947\t24.510117145899894\t17.0\t-7.510117\t13.0\t125.0\t23.430121709922886\nChile\t1.2522361\t20.786458333333332\t15.0\t-5.7864585\t8.0\t95.0\t21.92937097787956\nCroatia\t2.739726\t25.450704225352112\t20.0\t-5.450704\t12.0\t65.0\t12.993172638400049\nItaly\t13.439099\t39.663769658271256\t28.0\t-11.66377\t32.0\t900.0\t38.052479312333396\nSpain\t1.0835215\t28.215274608245853\t18.0\t-10.215275\t17.0\t770.0\t34.66239748657828\nUS\t0.43849993\t36.5734635584631\t30.0\t-6.5734634\t25.0\t135.0\t27.08885740311383\nIsrael\t3.1683168\t31.768916155419223\t25.0\t-6.768916\t22.0\t99.0\t18.89828725897862\nGeorgia\t2.3255813\t19.321428571428573\t17.0\t-2.3214285\t12.0\t40.0\t7.6428732285448495\nCanada\t1.1673151\t35.71259842519685\t30.0\t-5.7125983\t20.0\t95.0\t19.658147561596827\nBrazil\t9.615385\t23.76595744680851\t20.0\t-3.7659574\t15.0\t60.0\t11.053649340253214\nSlovenia\t8.045977\t24.8125\t20.0\t-4.8125\t15.0\t90.0\t13.982895292445468\nNew Zealand\t2.8893588\t26.93178519593614\t20.0\t-6.931785\t14.0\t99.0\t17.10108329813648\nEngland\t6.756757\t51.68115942028985\t50.0\t-1.6811594\t17.0\t95.0\t14.858640537948824\nPortugal\t14.338429\t26.21825641025641\t16.0\t-10.218256\t16.0\t127.0\t41.17524069489103\nAustralia\t1.5027909\t35.43766346992153\t21.0\t-14.437663\t23.0\t200.0\t49.04945831995617\nAustria\t16.32287\t30.76277241872097\t25.0\t-5.7627726\t19.0\t98.0\t27.2247973891962\nSouth Africa\t7.7087793\t24.668986852281517\t19.0\t-5.668987\t16.0\t100.0\t21.843064062922746\nHungary\t0.6849315\t40.648275862068964\t25.0\t-15.648276\t20.0\t320.0\t69.45107500912692\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d39",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d40",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d41",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d42",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d43",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d44"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1571445000032_243521319",
      "id": "20191019-003000_705037805",
      "dateCreated": "2019-10-19 00:30:00.032",
      "dateStarted": "2019-10-19 00:30:35.722",
      "dateFinished": "2019-10-19 00:30:43.458",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n/* Use imputation data to fill in unknown prices */\nval missingPriceDf \u003d fixedReviews.where(col(\"price\").isNull.and(col(\"country\").isNotNull))\nval normalDf \u003d fixedReviews.where(col(\"price\").isNotNull)\n\nval imputedPrice \u003d missingPriceDf\n  .join(joinedWithOtherPrices, \"country\")\n  .withColumn(\"price\", when(col(\"avg\")\u003ecol(\"p50\"), col(\"p50\")).otherwise(col(\"avg\")))\n  .drop(\"total\",\"min\",\"p25\",\"p50\",\"p75\",\"p90\",\"p99\",\"max\",\"avg\",\"sd_pop\",\"sd_sample\"\n  ,\"miss_perc\",\"iqR\",\"min_max_dist\",\"median_mean_dist\", \"missing\")\n/* both schemas must match for union */\nval filledPriceDf \u003d normalDf.union(imputedPrice)\nfilledPriceDf.persist()\nfilledPriceDf.createOrReplaceTempView(\"reviews\")",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:33:21.342",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "missingPriceDf: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [country: string, description: string ... 11 more fields]\nnormalDf: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [country: string, description: string ... 11 more fields]\nimputedPrice: org.apache.spark.sql.DataFrame \u003d [country: string, description: string ... 11 more fields]\nfilledPriceDf: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [country: string, description: string ... 11 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1571445035659_-273986329",
      "id": "20191019-003035_1580762260",
      "dateCreated": "2019-10-19 00:30:35.659",
      "dateStarted": "2019-10-19 00:32:18.434",
      "dateFinished": "2019-10-19 00:32:20.118",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nfilledPriceDf\n  .where(col(\"price\").isNull)\n  .agg(count(\"*\") as \"total\").show",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:32:34.268",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-----+\n|total|\n+-----+\n|    0|\n+-----+\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d45",
            "http://2cd1b9b392ef:4040/jobs/job?id\u003d46"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1571445114553_-1334043734",
      "id": "20191019-003154_976766151",
      "dateCreated": "2019-10-19 00:31:54.554",
      "dateStarted": "2019-10-19 00:32:34.338",
      "dateFinished": "2019-10-19 00:32:56.170",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Next Section. The Fun Stuff (Modeling)",
      "user": "anonymous",
      "dateUpdated": "2019-10-19 00:33:47.646",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eNext Section. The Fun Stuff (Modeling)\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1571445154269_515219443",
      "id": "20191019-003234_388760875",
      "dateCreated": "2019-10-19 00:32:34.269",
      "dateStarted": "2019-10-19 00:33:47.672",
      "dateFinished": "2019-10-19 00:33:51.414",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "SVCC/2-SparkExploratory",
  "id": "2EQFEJF47",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}